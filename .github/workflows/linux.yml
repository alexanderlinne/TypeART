name: Test-TypeART

on:
  push:
    branches: [ devel, ta2-devel ] # only (ta2-)devel is ready for clang 10
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup LLVM repository
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main' -y
        sudo apt-get update -q
      
    - name: Install LLVM
      run: sudo apt-get install libllvm10 llvm-10 llvm-10-dev llvm-10-runtime
      
    - name: Install Clang
      run: |
        sudo apt-get install clang-10 clang-tools-10 libclang-common-10-dev libclang-10-dev libclang1-10 clang-format-10 clang-tidy-10 clangd-10
        
    - name: Setup env
      run: |
        usr/bin/clang -v
        sudo ln -f -s /usr/bin/clang-10 /usr/bin/clang
        sudo ln -f -s /usr/bin/clang++-10 /usr/bin/clang++
        sudo ln -f -s /usr/bin/opt-10 /usr/bin/opt
        sudo ln -f -s /usr/bin/FileCheck-10 /usr/bin/FileCheck
        sudo ln -f -s /usr/bin/llc-10 /usr/bin/llc
        echo "::set-env name=ClangC::/usr/bin/clang-10"
        echo "::set-env name=ClangCxx::/usr/bin/clang++-10"
        echo "::set-env name=EXT_LIT::/usr/lib/llvm-10/build/utils/lit/lit.py"

    - name: Build TypeART
      run: |
        cmake --version
        cmake -B build -DTEST_CONFIG=ON -DLLVM_EXTERNAL_LIT=${EXT_LIT} -DCMAKE_CXX_COMPILER=${ClangCxx} -DCMAKE_CC_COMPILER=${ClangC}
        cmake --build build --parallel
    
    - name: Test TypeART
      run: cmake --build build --target test -- ARGS=-VV
        
        
